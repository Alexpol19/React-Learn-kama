{"version":3,"sources":["components/pages/Users/Users.module.css","redux/users-selectors.js","components/pages/Users/User.jsx","components/pages/Users/Users.jsx","components/pages/Users/UsersContainer.jsx"],"names":["module","exports","getUsersReselect","createSelector","state","users","usersData","filter","user","getPageSize","pageSize","getTotalUsers","totalUsers","getCurrentPage","currentPage","getIsFetching","isFetching","getIsAuth","auth","isAuth","getAuthId","id","User","props","photoUrl","photos","small","large","authId","className","style","user__left","to","src","alt","followed","onClick","unfollow","disabled","followFetching","user__unsubscribe","follow","user__subscribe","user__right","user__about","name","user__idea","status","user__location","Users","users__list","type","color","height","width","timeout","length","map","key","followThunkCreator","unfollowThunkCreator","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","page","updateUsers","innerClass","pagination","activeClass","active","UsersContainerAPI","updateCurrentPage","getUsersThunkCreator","this","React","Component","compose","connect"],"mappings":"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","file":"static/js/5.e61f98ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__2c--4\",\"users__list\":\"Users_users__list__30iIm\",\"users__showMore\":\"Users_users__showMore__nEwka\",\"user\":\"Users_user__Z5gKi\",\"user__left\":\"Users_user__left__2w8jd\",\"user__unsubscribe\":\"Users_user__unsubscribe__1WrEx\",\"user__subscribe\":\"Users_user__subscribe__3CIRb\",\"user__right\":\"Users_user__right__j9igJ\",\"user__about\":\"Users_user__about__2iNTX\",\"user__location\":\"Users_user__location__1Y1Tl\",\"pagination\":\"Users_pagination__3yH2t\",\"active\":\"Users_active__3cxs_\"};","import { createSelector } from 'reselect';\r\n\r\n// primitive Selector\r\nconst getUsers = (state) => {\r\n    return state.users.usersData;\r\n}\r\n// Complicated Selector created by createSelector, \r\n// used Primitive Selectors, or others Complicated Selectors\r\nexport const getUsersReselect = createSelector( getUsers, (users) => {\r\n    return users.filter(user => true);\r\n})\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.users.pageSize;\r\n}\r\nexport const getTotalUsers = (state) => {\r\n    return state.users.totalUsers;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.users.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.users.isFetching;\r\n}\r\nexport const getIsAuth = (state) => {\r\n    return state.auth.isAuth;\r\n}\r\nexport const getAuthId = (state) => {\r\n    return state.auth.id;\r\n}","import React from 'react';\r\nimport style from './Users.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst User = (props) => {\r\n    let photoUrl = '';\r\n\r\n\r\n    let follow = () =>{\r\n        props.follow(props.user.id)\r\n    }\r\n    let unfollow = () =>{\r\n        props.unfollow(props.user.id)\r\n    }\r\n\r\n    // if not one small photo show large, else show some photo\r\n    if(props.user.photos.small != null){\r\n        photoUrl = props.user.photos.small;\r\n    }\r\n    else if(props.user.photos.large != null){\r\n        photoUrl = props.user.photos.large;\r\n    }else{\r\n        photoUrl = 'https://media.istockphoto.com/vectors/silhouette-of-male-head-man-face-in-profile-side-view-vector-id956741868?k=6&m=956741868&s=170667a&w=0&h=i5YCJE7emqMCvB8xGTviXpr-OFknbynAXA_hcGAZ_Vc='\r\n    }\r\n\r\n    // if user == auth user (My account) dont't show Follow\r\n    let showFollow = true;\r\n    if(props.user.id == props.authId){\r\n        showFollow = false;\r\n    }\r\n\r\n    // is fetching make button -disabled\r\n\r\n    return (\r\n        <div className={style.user}>\r\n            <div className={style.user__left}>\r\n                <NavLink to={'/profile/' + props.user.id}><img src={photoUrl} alt=\"logo\"/></NavLink>\r\n                {props.auth \r\n                    ? (props.user.id == props.authId \r\n                        ? <></>\r\n                        : (!props.user.followed \r\n                            ? <button onClick={follow} disabled={props.user.followFetching} className={style.user__subscribe}>Subscribe</button> \r\n                            : <button onClick={unfollow} disabled={props.user.followFetching} className={style.user__unsubscribe}>Unsubscribe</button>))\r\n                        \r\n                    : <></>}\r\n                \r\n            </div>\r\n            <div className={style.user__right}>\r\n                <div className={style.user__about}>\r\n                    <h2>{props.user.name}</h2>\r\n                    <p className={style.user__idea}>{props.user.status}</p>\r\n                </div>\r\n                <div className={style.user__location}>\r\n                    {/* <p>{props.user.location.country}</p> */}\r\n                    {/* <p>{props.user.location.city}</p> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from 'react-loader-spinner';\r\nimport style from './Users.module.css';\r\nimport User from './User';\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nlet Users = (props) => {\r\n    let updateCurrentPage = (page) => {\r\n        props.updateUsers(page);\r\n    }\r\n    \r\n    return (\r\n        <div className={style.users}>\r\n            <h2>Users</h2>\r\n            <div className={style.users__list}>\r\n                {   props.isFetching ?\r\n                    <Loader\r\n                        type=\"ThreeDots\"\r\n                        color=\"#00BFFF\"\r\n                        height={100}\r\n                        width={100}\r\n                        timeout={0} \r\n                \r\n                    />\r\n                    :\r\n                    props.users.length\r\n                    ? props.users.map( (user) => {\r\n                        return <User key={user.id} user={user} follow={props.followThunkCreator} unfollow={props.unfollowThunkCreator} auth={props.auth} authId={props.authId}  />\r\n                    })\r\n                    : <div>Users not</div>\r\n                }\r\n            </div>\r\n            {/* <Pagination pages={pages} current={props.currentPage} updateCurrentPage={updateCurrentPage} /> */}\r\n            <Pagination\r\n                activePage={props.currentPage}\r\n                itemsCountPerPage={props.pageSize}\r\n                totalItemsCount={props.totalUsers}\r\n                pageRangeDisplayed={5}\r\n                onChange={updateCurrentPage}\r\n                // custom classes\r\n                innerClass={style.pagination}\r\n                activeClass={style.active}\r\n            />\r\n\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateCurrentPage, getUsersThunkCreator, followThunkCreator, unfollowThunkCreator } from '../../../redux/usersReducer';\r\nimport { getPageSize, getTotalUsers, getCurrentPage, getIsFetching, getIsAuth, getAuthId, getUsersReselect } from '../../../redux/users-selectors';\r\nimport Users from './Users';\r\nimport { withAuthRedirect } from '../../../hoc/AuthCheck';\r\nimport { compose } from 'redux';\r\n\r\nclass UsersContainerAPI extends React.Component{\r\n    componentDidMount(){\r\n        // if users not in redux then load users\r\n        if(this.props.users.length == 0){\r\n            this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\r\n        }   \r\n    }\r\n    updateUsers = (currentPage) => {\r\n        this.props.updateCurrentPage(currentPage)\r\n        this.props.getUsersThunkCreator(currentPage, this.props.pageSize);\r\n    }\r\n    render() {\r\n        return (\r\n            // <Users users={this.props.users} currentPage={this.props.currentPage}\r\n            //     totalUsers={this.props.totalUsers} pageSize={this.props.pageSize}\r\n            //     updateUsers={this.updateUsers} \r\n            //     updateCurrentPage={this.props.updateCurrentPage} subscribeUser={this.props.subscribeUser} \r\n            //     isFetching={this.props.isFetching}\r\n            // />\r\n            <Users {...this.props} updateUsers={this.updateUsers}\r\n            />\r\n        );\r\n    }\r\n}\r\n// -------------old mapStateToProps\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.users.usersData,\r\n//         pageSize: state.users.pageSize,\r\n//         totalUsers: state.users.totalUsers,\r\n//         currentPage: state.users.currentPage,\r\n//         isFetching: state.users.isFetching,\r\n\r\n//         auth: state.auth.isAuth,\r\n//         authId: state.auth.id\r\n//     }\r\n// }\r\n// --------------------new mapStateToProps , with selectors\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersReselect(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsers: getTotalUsers(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n\r\n        auth: getIsAuth(state),\r\n        authId: getAuthId(state)\r\n    }\r\n}\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         subscribeUser : (id) => {\r\n//             dispatch(subscribeUserActionCreator(id));\r\n//         },\r\n//         setUsers : (users) => {\r\n//             dispatch(setUsersActionCreator(users));\r\n//         },\r\n//         setTotalUsers: (total) => {\r\n//             dispatch(setTotalUsersActionCreator(total));\r\n//         },\r\n//         updateCurrentPage: (current) => {\r\n//             dispatch(updateCurrentPage(current))\r\n//         },\r\n//         updateIsFetching: () => {\r\n//             dispatch(updateIsFetching())\r\n//         }\r\n//     };\r\n// }\r\n\r\n// let AuthRedirectContainer = withAuthRedirect(UsersContainerAPI)\r\n\r\n// const UsersContainer = connect(mapStateToProps, {\r\n//         updateCurrentPage,\r\n//         getUsersThunkCreator,\r\n//         followThunkCreator,\r\n//         unfollowThunkCreator,\r\n//     }\r\n// )(AuthRedirectContainer)\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        updateCurrentPage,\r\n        getUsersThunkCreator,\r\n        followThunkCreator,\r\n        unfollowThunkCreator,\r\n    }), \r\n    // withAuthRedirect\r\n)(UsersContainerAPI);"],"sourceRoot":""}