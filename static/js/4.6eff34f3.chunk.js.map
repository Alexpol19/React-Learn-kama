{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Messages/Messages.module.css","components/Dialogs/Messages/Message/Message.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Messages/Message/Message.jsx","components/Dialogs/Messages/NewMessageForm.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Messages/MessagesContainer.jsx","components/Dialogs/DialogsContainer.jsx","components/Dialogs/Dialogs.jsx"],"names":["module","exports","Dialog","props","to","id","activeClassName","style","active","className","dialog","name","Message","own","my","companion","message","message__left","src","url","href","message__right","messageText","minLength10","minLength","NewMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","label","component","Input","validate","requiredField","type","Messages","messages","messagesData","map","key","newMessage","sendMessage","MessagesContainer","connect","state","chat","dispatch","formData","addMessageActionCreator","compose","dialogs","withAuthRedirect","dialogs__items","Dialogs","DialogsContainer","path","render"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,kC,oBCAtED,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,yB,oBCA3DD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,WAAa,+B,oBCArED,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,eAAiB,gCAAgC,UAAY,6B,wGCSlJC,EANA,SAACC,GACZ,OACI,kBAAC,IAAD,CAASC,GAAI,YAAYD,EAAME,GAAIC,gBAAiBC,IAAMC,OAAQC,UAAWF,IAAMG,QAASP,EAAMQ,O,oDCiB3FC,EApBC,SAACT,GAEb,IAAIU,EAAM,GAMV,OAJIA,EADY,GAAbV,EAAMU,IACCN,IAAMO,GAENP,IAAMQ,UAIZ,yBAAKN,UAAWF,IAAMS,QAAQ,IAAIH,GAC9B,yBAAKJ,UAAWF,IAAMU,eAClB,yBAAKC,IAAKf,EAAMgB,MAChB,uBAAGC,KAAK,KAAKjB,EAAMQ,OAEvB,yBAAKF,UAAWF,IAAMc,gBAAgB,2BAAIlB,EAAMmB,gB,kCCbtDC,EAAcC,YAAU,IAqBfC,EAJMC,YAAU,CAC3BC,KAAM,WADWD,EAfF,SAACvB,GAChB,OACI,0BAAMyB,SAAUzB,EAAM0B,cAClB,kBAACC,EAAA,EAAD,CACInB,KAAK,cACLoB,YAAY,UACZC,MAAM,gBACNC,UAAWC,IACXC,SAAU,CAACC,IAAeb,GAC1Bc,KAAK,SACT,4CCEGC,EAdE,SAACnC,GACd,OACI,yBAAKM,UAAWF,IAAMgC,UAEdpC,EAAMO,OAAO8B,aACRC,KAAK,SAAAzB,GAAO,OAAI,kBAAC,EAAD,CAASX,GAAIW,EAAQX,GAAIqC,IAAK1B,EAAQX,GAAIM,KAAMK,EAAQL,KAAMW,YAAaN,EAAQM,YAAaH,IAAKH,EAAQG,IAAKN,IAAKG,EAAQH,SAExJ,yBAAKJ,UAAWF,IAAMoC,YAClB,kBAAC,EAAD,CAAgBf,SAAUzB,EAAMyC,iB,OCOjCC,EAFWC,aAbJ,SAACC,GACnB,MAAO,CACHrC,OAASqC,EAAMC,SAGE,SAACC,GACtB,MAAO,CACHL,YAAa,SAACM,GACVD,EAASE,YAAwBD,EAAS5B,kBAK5BwB,CAA6CR,G,eCaxDc,oBAAQN,aATD,SAACC,GACnB,MAAO,CACHM,QAASN,EAAMC,KAAKK,YAOqBC,IAAlCF,EAxBS,SAACjD,GACrB,OACI,yBAAKM,UAAWF,IAAMgD,gBAEdpD,EAAMkD,QACDZ,KAAK,SAAA/B,GAAM,OAAI,kBAAC,EAAD,CAAQL,GAAIK,EAAOL,GAAIqC,IAAKhC,EAAOL,GAAIM,KAAMD,EAAOC,cCUzE6C,UAfC,SAACrD,GAIb,OACI,yBAAKM,UAAWF,IAAM8C,SAClB,kBAACI,EAAD,MACA,kBAAC,IAAD,CACIC,KAAM,aAAoBC,OAAS,kBAC/B,kBAAC,EAAD","file":"static/js/4.6eff34f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__i6jbx\",\"dialogs__items\":\"Dialogs_dialogs__items__pnHgf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__2Uxr2\",\"active\":\"Dialog_active__z1XZx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__15qSY\",\"newMessage\":\"Messages_newMessage__29MlY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1aLFw\",\"message__left\":\"Message_message__left__14L4w\",\"message__right\":\"Message_message__right__zvD7P\",\"companion\":\"Message_companion__16u8V\"};","import React from 'react';\r\nimport style from './Dialog.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Dialog = (props) => {\r\n    return(\r\n        <NavLink to={\"/dialogs/\"+props.id} activeClassName={style.active} className={style.dialog}>{props.name}</NavLink>\r\n            \r\n    );\r\n}\r\nexport default Dialog;","import React from 'react';\r\nimport style from './Message.module.css'\r\n\r\nconst Message = (props) =>{\r\n    // 1 - my |  0 - companion\r\n    let own = '';\r\n    if(props.own == 1){\r\n        own = style.my;\r\n    }else{\r\n        own = style.companion;\r\n    }\r\n    return (\r\n        // or .my, or .companion\r\n        <div className={style.message+' '+own}>\r\n            <div className={style.message__left}>\r\n                <img src={props.url} />\r\n                <a href=\"#\">{props.name}</a>\r\n            </div>\r\n            <div className={style.message__right}><p>{props.messageText}</p></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { Input } from '../../common/FormControls';\r\nimport { requiredField, minLength } from '../../../utils/validators/validators';\r\n\r\nconst minLength10 = minLength(10);\r\n\r\nconst NewMessage = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field \r\n                name=\"messageText\" \r\n                placeholder=\"Message\" \r\n                label=\"Enter message\"\r\n                component={Input} \r\n                validate={[requiredField, minLength10]}\r\n                type='text' />\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet NewMessageForm = reduxForm({\r\n    form: 'message'\r\n})(NewMessage)\r\n\r\nexport default NewMessageForm;\r\n","import React from 'react';\r\nimport style from './Messages.module.css';\r\nimport Message from './Message/Message';\r\nimport NewMessageForm from './NewMessageForm';\r\n\r\nconst Messages = (props) =>{\r\n    return (\r\n        <div className={style.messages}>\r\n            {\r\n                props.dialog.messagesData\r\n                    .map( message => <Message id={message.id} key={message.id} name={message.name} messageText={message.messageText} url={message.url} own={message.own} /> )\r\n            }\r\n            <div className={style.newMessage}>\r\n                <NewMessageForm onSubmit={props.sendMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport { addMessageActionCreator, onInputMessageTextActionCreator } from '../../../redux/chatReducer';\r\nimport Messages from './Messages';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialog : state.chat\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (formData) => {\r\n            dispatch(addMessageActionCreator(formData.messageText))\r\n        },\r\n    }\r\n}\r\n\r\nconst MessagesContainer = connect(mapStateToProps, mapDispatchToProps)(Messages);\r\n\r\nexport default MessagesContainer;","import React from 'react';\r\nimport style from './Dialogs.module.css'\r\nimport Dialog from './Dialog/Dialog';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/AuthCheck';\r\nimport { compose } from 'redux';\r\n\r\nconst DialogsElements = (props) => {\r\n    return(\r\n        <div className={style.dialogs__items}>\r\n            {\r\n                props.dialogs\r\n                    .map( dialog => <Dialog id={dialog.id} key={dialog.id} name={dialog.name} /> )\r\n            }\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.chat.dialogs,\r\n    }\r\n}\r\n// let AuthRedirectComponent = withAuthRedirect(DialogsElements)\r\n\r\n// const DialogsContainer = connect(mapStateToProps)(AuthRedirectComponent)\r\n\r\nexport default compose(connect(mapStateToProps), withAuthRedirect)(DialogsElements)\r\n;","import React from 'react';\r\nimport style from './Dialogs.module.css'\r\nimport Dialog from './Dialog/Dialog';\r\nimport { Route } from 'react-router-dom';\r\nimport MessagesContainer from './Messages/MessagesContainer';\r\nimport DialogsContainer from './DialogsContainer';\r\n\r\nconst Dialogs = (props) => {\r\n    // need to change when clicked on chat dialog\r\n    let chatId=1;\r\n    \r\n    return(\r\n        <div className={style.dialogs}>\r\n            <DialogsContainer />\r\n            <Route \r\n                path={\"/dialogs/\"+chatId} render={ () => \r\n                    <MessagesContainer />}\r\n            />\r\n            \r\n        </div>\r\n    );\r\n}\r\nexport default Dialogs;"],"sourceRoot":""}