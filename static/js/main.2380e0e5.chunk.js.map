{"version":3,"sources":["redux/chatReducer.js","api/api.js","redux/usersReducer.js","components/Header/logo.svg","utils/validators/validators.js","serviceWorker.js","components/Header/Header.jsx","redux/authReducer.js","components/Header/HeaderContainer.jsx","components/NavBar/Friends/Friend.jsx","components/NavBar/Friends/FriendsContainer.jsx","components/NavBar/Menu/MenuItem.jsx","components/NavBar/Menu/MenuContainer.jsx","components/NavBar/NavBar.jsx","components/Profile/ProfileInfo/Status/StatusFunc.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/profileReducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/NewPostFrom.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainerPureFunction.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","redux/appReducer.js","redux/navBarReducer.js","redux/redux-store.js","App.js","hoc/withSuspense.js","index.js","components/common/FormControls.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/FormControls.module.css","components/NavBar/Friends/Friends.module.css","components/NavBar/Menu/Menu.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","App.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Login/Login.module.css","hoc/AuthCheck.jsx"],"names":["initialState","newMessageText","dialogs","id","name","messagesData","messageText","url","own","AddMessage","addMessageActionCreator","message","type","chatReducer","state","action","newMessage","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","res","data","follow","userId","post","resultCode","unfollow","delete","authAPI","auth","login","email","password","rememberMe","logout","profileAPI","getProfile","getStatus","updateStatus","status","put","usersData","totalUsers","isFetching","FollowUser","UnfollowUser","SetUsers","SetTotalUsers","UpdateCurrentPage","UpdateIsFetching","FetchingFollow","followUser","unfollowUser","updateCurrentPage","updateIsFetching","fetching","getUsersThunkCreator","dispatch","a","totalCount","newUsers","items","followUnfollowFlow","apiMethod","actionCreator","followThunkCreator","bind","unfollowThunkCreator","usersReducer","newState","map","user","followFetching","followed","module","exports","requiredField","value","minLength","min","length","Boolean","window","location","hostname","match","Header","props","className","style","header__line","to","src","logo","isAuth","userName","photoUrl","alt","onClick","inintialState","SetAuthData","setAuthData","isAuthFetch","authReducer","connect","userData","profile","photos","small","large","Friend","friend","href","FriendsContainer","friends","users","friendsLinks","key","MenuItem","menu","linkName","activeClassName","active","MenuContainer","navBar","link","NavBar","StatusFunc","useState","setStatus","editMode","setEditMode","useEffect","status__input","autoFocus","onBlur","onChange","e","target","inputStatus","authId","currentUserId","ProfileInfo","profileData","author","author__details","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","mainLink","website","vk","twitter","instagram","youtube","github","color","height","width","timeout","userStatus","newPostText","postsData","likeCount","description","AddPost","DeletePost","SetUserData","SetStatus","setUserData","profileReducer","newPost","text","console","log","postId","filter","p","Post","post__text","minLength7","NewPostForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Input","label","validate","MyPosts","posts","posts__new","addPost","posts__others","MyPostsContainer","React","memo","formData","postText","Profile","ProfileContainer","this","params","getProfileThunkCreator","getStatusThunkCreator","updateStatusThunkCreator","Component","compose","newStatus","result","catch","err","response","withRouter","withAuthRedirect","minLength6","minLength10","LoginForm","error","loginPage","commonError","LoginContainer","loginData","messages","stopSubmit","_error","initialized","SET_INITIALIZED","appReducer","navBarReducer","require","createStore","combineReducers","applyMiddleware","store","app","chat","formReducer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","thunkMiddleware","UsersContainer","lazy","Dialogs","App","initializeApp","appWrapper","content","path","render","fallback","AppContainer","promisesArray","Promise","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","children","meta","touched","warning","s","elemWrap","elemStyle","input","mapStateToPropsRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.2380e0e5.chunk.js","sourcesContent":["const initialState = {\r\n    newMessageText:'cdcd',\r\n    dialogs: [\r\n        {\r\n            id:1,\r\n            name: 'Vasea',\r\n        },\r\n        {\r\n            id:2,\r\n            name: 'Misa',\r\n        },\r\n        {\r\n            id:3,\r\n            name: 'Petea',\r\n        },\r\n    ],\r\n    messagesData: [\r\n        {\r\n            id:1,\r\n            name: 'Vasea',\r\n            messageText: 'Hello!!!',\r\n            url: 'https://io.ua/img_aa/large/3223/32/32233275.jpg',\r\n            own: 0,\r\n        },\r\n        {\r\n            id:2,\r\n            name: 'Vasea',\r\n            messageText: 'Where are you?',\r\n            url: 'https://io.ua/img_aa/large/3223/32/32233275.jpg',\r\n            own: 0,\r\n        },\r\n        {\r\n            id:3,\r\n            name: 'Vasea',\r\n            messageText: 'AU',\r\n            url: 'https://io.ua/img_aa/large/3223/32/32233275.jpg',\r\n            own: 0,\r\n        },\r\n        {\r\n            id:4,\r\n            name: 'I',\r\n            messageText: \"I'm Here\",\r\n            url: 'http://lorempixel.com/75/75',\r\n            own: 1,\r\n        },\r\n    ],\r\n}\r\n\r\nconst chatReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        \r\n        case AddMessage:\r\n            let newMessage = {\r\n                id:5,\r\n                name: 'I',\r\n                messageText: action.message,\r\n                url: 'http://lorempixel.com/75/75',\r\n                own: 1,\r\n            }\r\n            // push new elem without method push\r\n            return { \r\n                ...state, \r\n                newMessageText : '', \r\n                messagesData : [...state.messagesData, newMessage] \r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst AddMessage = 'AddMessage';\r\n\r\nexport const addMessageActionCreator = (message) => {\r\n    return { type: AddMessage, message: message }\r\n}\r\n\r\nexport default chatReducer;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {'Content-Type': 'application/json',\r\n        'API-KEY': '92b9295a-17be-4736-8b70-151d480ec64a'\r\n    },\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize){\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then((res) => {\r\n            return res.data\r\n        })\r\n    },\r\n    follow(userId){\r\n        return instance.post(`follow/${userId}`).then((res) => {\r\n            return res.data.resultCode\r\n        })\r\n    },\r\n    unfollow(userId){\r\n        return instance.delete(`follow/${userId}`).then((res) => {\r\n            return res.data.resultCode\r\n        })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    auth(){\r\n        return instance.get('auth/me').then((res) => {\r\n            return res.data\r\n        })\r\n    },\r\n    login({email, password, rememberMe = false}){\r\n        return instance.post('auth/login', {email, password, rememberMe}).then((res) => {\r\n            return res.data\r\n        });\r\n    },\r\n    logout(){\r\n        return instance.delete('auth/login').then((res) => {\r\n\r\n            return res.data\r\n        });\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId){\r\n        return instance.get(`profile/${userId}`).then((res) => {\r\n            return res.data\r\n        })\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/${userId}`).then((res) => {\r\n            return res.data\r\n        })\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`, {status: status}).then((res) => {\r\n            return res.data.resultCode\r\n        })\r\n    },\r\n}","import { usersAPI } from \"../api/api\";\r\n\r\nconst initialState = {\r\n    usersData: [],\r\n    pageSize: 5,\r\n    totalUsers: 0,\r\n    currentPage: 1,\r\n    isFetching:false,\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    let newState = {...state};\r\n    switch(action.type) {\r\n        case SetUsers: {\r\n            newState.usersData = [...action.newUsers]\r\n            newState.usersData = newState.usersData.map((user) => {\r\n                user.followFetching = false;\r\n                return user;\r\n            });\r\n            return newState;\r\n        }\r\n        case SetTotalUsers: {\r\n            newState.totalUsers = action.totalUsers;\r\n            return newState;\r\n        }\r\n        case UpdateCurrentPage: {\r\n            newState.currentPage = action.currentPage;\r\n            return newState;\r\n        }\r\n        case UpdateIsFetching: {\r\n            newState.isFetching = !newState.isFetching;\r\n            return newState;\r\n        }\r\n        case FollowUser: {\r\n            newState.usersData = state.usersData.map( (user) => {\r\n                if( user.id == action.userId){\r\n                    user.followed = true;\r\n                }\r\n                return user;\r\n            })\r\n            return newState;\r\n        }\r\n        case UnfollowUser: {\r\n            newState.usersData = state.usersData.map( (user) => {\r\n                if( user.id == action.userId){\r\n                    user.followed = false;\r\n                }\r\n                return user;\r\n            })\r\n            return newState;\r\n        }\r\n        case FetchingFollow: {\r\n            newState.usersData = state.usersData.map( (user) => {\r\n                if( user.id == action.userId){\r\n                    user.followFetching = !user.followFetching;\r\n                }\r\n                return user;\r\n            })\r\n            return newState;\r\n        }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst FollowUser = 'FollowUser';\r\nconst UnfollowUser = 'UnfollowUser';\r\nconst SetUsers = 'SetUsers';\r\nconst SetTotalUsers = 'SetTotalUsers';\r\nconst UpdateCurrentPage = 'UpdateCurrentPage';\r\nconst UpdateIsFetching = 'UpdateIsFetching';\r\nconst FetchingFollow = 'FetchingFollow';\r\n\r\nexport const followUser = (id) => {\r\n    return { type: FollowUser,\r\n              userId: id}\r\n}\r\nexport const unfollowUser = (id) => {\r\n    return { type: UnfollowUser,\r\n              userId: id}\r\n}\r\nexport const setUsers = (newUsers) => {\r\n    return { type: SetUsers,\r\n              newUsers: newUsers}\r\n}\r\nexport const setTotalUsers = (totalUsers) => {\r\n    return { type: SetTotalUsers,\r\n              totalUsers: totalUsers}\r\n}\r\nexport const updateCurrentPage = (currentPage) => {\r\n    return { type: UpdateCurrentPage,\r\n        currentPage: currentPage}\r\n}\r\nexport const updateIsFetching = () => {\r\n    return { type: UpdateIsFetching}\r\n}\r\nexport const fetching = (id) => {\r\n    return { type: FetchingFollow, userId: id}\r\n}\r\n\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(updateIsFetching());\r\n    let data = await usersAPI.getUsers(currentPage, pageSize);\r\n    dispatch(setTotalUsers(data.totalCount));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(updateIsFetching());\r\n    \r\n}\r\n// ------------------before refactor\r\n// export const followThunkCreator = (userId) => (dispatch) => {\r\n//     dispatch(fetching(userId));\r\n//     usersAPI.follow(userId)\r\n//     .then((resultCode) => {\r\n//         if(resultCode === 0){\r\n//             dispatch(followUser(userId));\r\n//         }\r\n//         dispatch(fetching(userId));\r\n//     })\r\n//     .catch( (err) => {\r\n//         dispatch(fetching(userId));\r\n//         console.log(err);\r\n//     });\r\n// }\r\n// export const unfollowThunkCreator = (userId) => (dispatch) => {\r\n//     dispatch(fetching(userId));\r\n//     usersAPI.unfollow(userId)\r\n//     .then((resultCode) => {\r\n//         if(resultCode === 0){\r\n//             dispatch(unfollowUser(userId));\r\n//         }\r\n//         dispatch(fetching(userId));\r\n//     })\r\n//     .catch( (err) => {\r\n//         dispatch(fetching(userId));\r\n//         console.log(err);\r\n//     });\r\n// }\r\n// ------------------------after refactor\r\n// -------------------------dispatch from param, userId also from param, \r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(fetching(userId));\r\n    let resultCode = await apiMethod(userId);\r\n    if(resultCode === 0){\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(fetching(userId));\r\n}\r\nexport const followThunkCreator = (userId) => (dispatch) => {\r\n    // this is what different between other function\r\n    // let apiMethod = usersAPI.follow.bind(usersAPI); /// bind need to not Lose context\r\n    // let actionCreator = followUser;\r\n\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followUser);\r\n}\r\nexport const unfollowThunkCreator = (userId) => (dispatch) => {\r\n    // let apiMethod = usersAPI.unfollow.bind(usersAPI); /// bind need to not Lose context\r\n    // let actionCreator = unfollowUser;\r\n\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowUser);\r\n}\r\n\r\n\r\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const requiredField = value => {\r\n    if(!value){\r\n        return 'Required Field';\r\n    }\r\n    else {\r\n        return undefined\r\n    }\r\n}\r\n\r\n// export const minLength = value =>\r\n// value && value.length < 5 ? `Must be ${5} characters or more` : undefined\r\n\r\nexport const minLength = min => value => {\r\n    if(value && value.length < min){\r\n        return `Need min ${min} symbols`;\r\n    }\r\n    return undefined;\r\n}\r\n\r\n// export const minLength5 = minLength(5)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport style from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <header className=\"containerFluid\">\r\n            <div className={'container '+ style.header__line}>\r\n                <NavLink to='/'><img src={logo} /></NavLink>\r\n                {\r\n                    props.isAuth ? <div><span className={style.userName}>{props.login}</span><img src={props.photoUrl} alt=\"logo\"/><button onClick={props.logout}>Logout</button></div> : <NavLink to={'/login'} className={style.login}>Login</NavLink>\r\n                }\r\n                \r\n            </div>\r\n        </header> \r\n    );\r\n}\r\nexport default Header;","import { authAPI } from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\"\r\n\r\nconst inintialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state = inintialState, action) => {\r\n    switch(action.type) {\r\n        case SetAuthData: {\r\n            return {\r\n                ...state,\r\n                ...action.data            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// types\r\nconst SetAuthData = 'setAuthData'\r\n\r\n// actionCreators\r\nexport const setAuthData = (id, email, login, auth) => {\r\n    return {\r\n        type: SetAuthData,\r\n        data: {\r\n            id,\r\n            email,\r\n            login, \r\n            isAuth: auth,\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const isAuthFetch = () => (dispatch) => {\r\n    return authAPI.auth()\r\n    .then((data) => {\r\n        if(data.resultCode === 0){\r\n            let {id, login, email} = data.data;\r\n            let auth = true;\r\n            dispatch(setAuthData(id, email, login, auth))\r\n        }\r\n        else if(data.resultCode === 1){\r\n            let auth = false;\r\n            dispatch(setAuthData(null, null, null, auth))\r\n        }\r\n    })\r\n}\r\nexport const login = (loginData) => (dispatch) => {\r\n    authAPI.login(loginData)\r\n    .then((data) => {\r\n        if(data.resultCode === 0){\r\n            dispatch(isAuthFetch())\r\n        } else {\r\n            let message = data.messages.length > 0 ? data.messages : \"Some error!\"\r\n            let action = stopSubmit(\"login\", { _error: message,})\r\n            dispatch(action);\r\n        }\r\n    })\r\n}\r\nexport const logout = () => (dispatch) => {\r\n    authAPI.logout()\r\n    .then((data) => {\r\n        if(data.resultCode === 0){\r\n            dispatch(isAuthFetch())\r\n        }\r\n    })\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/authReducer';\r\n\r\nconst HeaderContainer = (props) => {\r\n    let photoUrl = '';\r\n    if(\r\n        props.userData){\r\n        if(\r\n            props.userData.photos.small != null){\r\n            photoUrl = \r\n            props.userData.photos.small;\r\n        }\r\n        else if(\r\n            props.userData.photos.large != null){\r\n            photoUrl = \r\n            props.userData.photos.large;\r\n        }else{\r\n            photoUrl = 'https://media.istockphoto.com/vectors/silhouette-of-male-head-man-face-in-profile-side-view-vector-id956741868?k=6&m=956741868&s=170667a&w=0&h=i5YCJE7emqMCvB8xGTviXpr-OFknbynAXA_hcGAZ_Vc='\r\n        }\r\n    }\r\n    return (\r\n        <Header {...\r\n            props} photoUrl = {photoUrl}/>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n        userData: state.profile.userData\r\n    };\r\n}\r\nexport default connect(mapStateToProps, {\r\n    logout\r\n})(HeaderContainer);","import React from 'react';\r\nimport style from './Friends.module.css';\r\n\r\nconst Friend = (props) => {\r\n    let photoUrl='';\r\n    if(props.friend.photos.small != null){\r\n        photoUrl = props.friend.photos.small;\r\n    }\r\n    else if(props.friend.photos.large != null){\r\n        photoUrl = props.friend.photos.large;\r\n    }else{\r\n        photoUrl = 'https://media.istockphoto.com/vectors/silhouette-of-male-head-man-face-in-profile-side-view-vector-id956741868?k=6&m=956741868&s=170667a&w=0&h=i5YCJE7emqMCvB8xGTviXpr-OFknbynAXA_hcGAZ_Vc='\r\n    }\r\n    return(\r\n        <a href=\"#\" className={style.friend}>\r\n            <img src={photoUrl} alt=\"logo\" />\r\n            <span>{props.friend.name}</span>\r\n        </a>\r\n    );\r\n}\r\nexport default Friend;","import React from 'react';\r\nimport style from './Friends.module.css';\r\nimport Friend from './Friend';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Friends = (props) => {\r\n    return(\r\n        <div className={style.friends}>\r\n            <h2>Friends</h2>\r\n            <div className={style.friendsLinks}>\r\n                {\r\n                    props.friends.map( (friend) => {\r\n                        if(friend.followed == true ){\r\n                            return <Friend key={friend.id} friend={friend} />\r\n                        }\r\n                })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.users.usersData\r\n    }\r\n}\r\n\r\nconst FriendsContainer = connect(mapStateToProps)(Friends);\r\n\r\nexport default FriendsContainer;","import React from 'react';\r\nimport style from './Menu.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst MenuItem = (props) => {\r\n    return(\r\n        <div className={style.menu}>\r\n            <NavLink to={'/'+props.linkName} activeClassName={style.active}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\nexport default MenuItem;","import React from 'react';\r\nimport style from './Menu.module.css';\r\nimport MenuItem from './MenuItem';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Menu = (props) => {\r\n    return(\r\n        <div className={style.menu}>\r\n            {\r\n                props.menu.map( link => <MenuItem key={link.id} name={link.name} linkName={link.link} />)\r\n            }\r\n        </div>\r\n    );\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        menu: state.navBar.menu\r\n    }\r\n}\r\nconst MenuContainer = connect(mapStateToProps)(Menu);\r\nexport default MenuContainer;","import React from 'react';\r\nimport style from './NavBar.module.css';\r\nimport FriendsContainer from './Friends/FriendsContainer';\r\nimport MenuContainer from './Menu/MenuContainer';\r\n\r\nconst NavBar = (props) => {\r\n\r\n    return(\r\n        <nav>\r\n            <MenuContainer />\r\n            <FriendsContainer />\r\n        </nav>\r\n    );\r\n}\r\nexport default NavBar;","import React, { useState, useEffect } from 'react';\r\nimport style from '../ProfileInfo.module.css';\r\n\r\nconst StatusFunc = (props) => {\r\n    let [status, setStatus] = useState( props.status );\r\n\r\n    let state = useState( false );\r\n    let editMode = state[0];\r\n    let setEditMode = state[1];\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n\r\n    let inputStatus = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n    let showInput = () => {\r\n        if(props.authId == props.currentUserId){\r\n            setEditMode( true )\r\n        }\r\n    }\r\n    let hideInput = () => {\r\n        setEditMode( false )\r\n        if(props.status != status){\r\n            props.updateStatus(status)\r\n        }\r\n    }\r\n    // componentDidUpdate(prevProps) {\r\n    //     if(prevProps.status !== props.status){\r\n    //         setStatus(props.status)\r\n    //     }\r\n    // }\r\n    return (\r\n        <p className={style.status}>\r\n            <span>Status: </span>\r\n            {editMode \r\n            ? <input type=\"text\" className={style.status__input} autoFocus={true} onBlur={hideInput} onChange={(e) => inputStatus(e)} value={status} /> \r\n            : <span onClick={showInput}>{props.status}</span>}\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default StatusFunc;","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport StatusFunc from './Status/StatusFunc'\r\n// import StatusClass from './Status/StatusClass';\r\n\r\nconst ProfileInfo = (props) => {\r\n    if(!props.profileData){\r\n        return <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={0} \r\n\r\n     />\r\n    }else{\r\n        return(\r\n            <>\r\n                <img src={props.profileData.photos.large} />\r\n                <div className={style.author}>\r\n                    <img src={props.profileData.photos.small} />\r\n                    <div className={style.author__details}>\r\n                        <h3>{props.profileData.fullName}</h3>\r\n                        <StatusFunc status={props.status} authId={props.authId} currentUserId={props.profileData.userId} updateStatus={props.updateStatus} />\r\n                        \r\n                        <p>About me: <span>{props.profileData.aboutMe}</span></p>\r\n                        {props.profileData.lookingForAJob ? <p>Looking for a job</p> : <p>Work</p>}\r\n                        {props.profileData.lookingForAJob ? <p>{props.profileData.lookingForAJobDescription}</p> : <></>}\r\n                        <p>Socials:</p>\r\n                        {props.profileData.contacts.facebook ? <p>Facebook: <span>{props.profileData.contacts.facebook}</span></p> : <></>}\r\n                        {props.profileData.contacts.mainLink ? <p>mainLink: <span>{props.profileData.contacts.mainLink}</span></p> : <></>}\r\n                        {props.profileData.contacts.website ? <p>website: <span>{props.profileData.contacts.website}</span></p> : <></>}\r\n                        {props.profileData.contacts.vk ? <p>vk: <span>{props.profileData.contacts.vk}</span></p> : <></>}\r\n                        {props.profileData.contacts.twitter ? <p>twitter: <span>{props.profileData.contacts.twitter}</span></p> : <></>}\r\n                        {props.profileData.contacts.instagram ? <p>instagram: <span>{props.profileData.contacts.instagram}</span></p> : <></>}\r\n                        {props.profileData.contacts.youtube ? <p>youtube: <span>{props.profileData.contacts.youtube}</span></p> : <></>}\r\n                        {props.profileData.contacts.github ? <p>github: <span>{props.profileData.contacts.github}</span></p> : <></>}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default ProfileInfo;","import { profileAPI } from \"../api/api\";\r\n\r\nconst initialState = {\r\n    userStatus : '',\r\n    userData: null,\r\n    newPostText: '',\r\n    postsData: [\r\n        {\r\n            id:1,\r\n            likeCount: 2,\r\n            description: 'Hello World',\r\n            url: 'https://klike.net/uploads/posts/2019-05/1556777145_1.jpg'\r\n        },\r\n        {\r\n            id:2,\r\n            likeCount: 5,\r\n            description: 'Hello Peoples',\r\n            url: 'https://resheto.net/images/mater/kartinka_motivatsiya_tsitata_9.jpg'\r\n        },\r\n    ]\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case AddPost:  // if (action === 'value1')\r\n            let newPost = {\r\n                id:3,\r\n                likeCount: 0,\r\n                description: action.text,\r\n                url: 'https://klike.net/uploads/posts/2019-05/1556777145_1.jpg'\r\n            }\r\n            return {\r\n                ...state, \r\n                newPostText : '', \r\n                postsData: [...state.postsData, newPost]\r\n            };\r\n        case DeletePost:  \r\n        console.log(action.postId)\r\n        console.log(state.postsData)\r\n            return {\r\n                ...state, \r\n                postsData: state.postsData.filter( p => p.id != action.postId)\r\n            };\r\n        case SetUserData:\r\n            return {\r\n                ...state,\r\n                userData: action.userData\r\n            }\r\n        case SetStatus:\r\n            // let status = action.status;\r\n            // if(status == ''){\r\n            //     status = 'Enter Status ...'\r\n            // }\r\n            return {\r\n                ...state,\r\n                userStatus: action.status,\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst AddPost = 'AddPost';\r\nconst DeletePost = 'AddPost';\r\nconst SetUserData = 'SetUserData';\r\nconst SetStatus = 'SetStatus';\r\n\r\n\r\nexport const addPostActionCreator = (text) => {\r\n    return { type: AddPost, text: text }\r\n}\r\nexport const deletePost = (id) => {\r\n    return { type: DeletePost, postId: id }\r\n}\r\nexport const setUserData = (userData) => {\r\n    return { type: SetUserData, userData}\r\n}\r\nexport const setStatus = (status) => {\r\n    return { type: SetStatus, status}\r\n}\r\n\r\n\r\nexport const getProfileThunkCreator = (userId) => (dispatch) => {\r\n    dispatch(setUserData())\r\n    profileAPI.getProfile(userId)\r\n    .then((data) => {\r\n        dispatch(setUserData(data))\r\n    })\r\n    .catch( (err) => {\r\n        console.log(err);\r\n    });\r\n}\r\n\r\n//--------------------- async await vs then\r\nexport const getStatusThunkCreator = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    if(response){\r\n        dispatch(setStatus(response))\r\n    }\r\n}\r\nexport const updateStatusThunkCreator = (newStatus) => (dispatch) => {\r\n    profileAPI.updateStatus(newStatus)\r\n    .then((result) => {\r\n        if(result === 0){\r\n            dispatch(setStatus(newStatus));\r\n        }\r\n    })\r\n    .catch( (err) => {\r\n        console.log(err);\r\n    });\r\n}\r\nexport default profileReducer;","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return(\r\n        <div className={style.post}>\r\n            <img src={props.url} />\r\n            <p className={style.post__text}>{props.description}</p>\r\n            <span>{props.likeCount}</span>  <button>Like</button> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { requiredField, minLength } from '../../../utils/validators/validators';\r\nimport { Input } from '../../common/FormControls';\r\n\r\nconst minLength7 = minLength(7);\r\n\r\nconst NewPost = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field \r\n                name=\"postText\" \r\n                placeholder=\"New post\" \r\n                component={Input} \r\n                label=\"Enter Text\"\r\n                type=\"text\" \r\n                validate={[requiredField, minLength7]}\r\n            />\r\n            <button>Add Post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nlet NewPostForm = reduxForm({\r\n    form: 'newPost'\r\n})(NewPost);\r\n\r\nexport default NewPostForm;","\r\nimport React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport NewPostForm from './NewPostFrom';\r\n\r\nconst MyPosts = (props) => {\r\n    return(\r\n        <div className={style.posts}>\r\n            <h2>My posts</h2>\r\n            <div className={style.posts__new}>\r\n                <NewPostForm onSubmit={props.addPost} />                \r\n            </div>\r\n            <div className={style.posts__others}>\r\n                {\r\n                    props.posts.map((post)=>{\r\n                        return <Post id={post.id} key={post.id} likeCount={post.likeCount}  description={post.description} url={post.url} />\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst MyPostsContainer = React.memo((props) => {\r\n    return (\r\n        <MyPosts {...props} />\r\n    )\r\n});\r\n\r\nlet mapStateToProps = (state) => {\r\n    \r\n    return {\r\n        posts: state.profile.postsData\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (formData) => {\r\n            dispatch(addPostActionCreator(formData.postText))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPostsContainer);","import React from 'react';\r\nimport style from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainerPureFunction';\r\n\r\nconst Profile = (props) => {\r\n    \r\n    return(\r\n        <div>\r\n            <ProfileInfo {...props} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer \r\n                />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getProfileThunkCreator, getStatusThunkCreator, updateStatusThunkCreator, setUserData} from '../../redux/profileReducer'\r\nimport { withRouter} from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/AuthCheck';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        // this.userId = this.props.match.params.userId;\r\n        this.updateStatus = this.updateStatus.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId\r\n        }\r\n        this.props.getProfileThunkCreator(userId);\r\n        this.props.getStatusThunkCreator(userId);\r\n\r\n        \r\n        if(!this.userId && (this.props.userId != null)){\r\n            this.userId = this.props.userId;\r\n            this.props.setUserData()\r\n        }\r\n        // this.props.updateIsFetching();\r\n        // first call\r\n        // if(!this.props.profileData){\r\n        //     this.props.getProfileThunkCreator(this.userId);\r\n        //     this.props.getStatusThunkCreator(this.userId);\r\n        // }\r\n        // else if((this.props.profileData.userId != this.userId)){\r\n        //     this.props.getProfileThunkCreator(this.userId);\r\n        //     this.props.getStatusThunkCreator(this.userId);\r\n        // }\r\n        // else{\r\n\r\n        // }\r\n        \r\n        \r\n    }\r\n    componentDidUpdate() {\r\n        // if(!this.userId && (this.props.userId != null)){\r\n        //     this.userId = this.props.userId;\r\n        //     this.props.setUserData()\r\n        // }\r\n    }\r\n\r\n    updateStatus(status) {\r\n        this.props.updateStatusThunkCreator(status)\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <Profile {...this.props} authId={this.props.userId} updateStatus={this.updateStatus} />\r\n            </div>\r\n        )\r\n        \r\n        \r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profileData: state.profile.userData,\r\n        userId: state.auth.id,\r\n        status: state.profile.userStatus,\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        updateStatusThunkCreator,\r\n        getStatusThunkCreator,\r\n        getProfileThunkCreator,\r\n        setUserData,\r\n    }), \r\n    withRouter, \r\n    withAuthRedirect\r\n    )(ProfileContainer);","import React from 'react';\r\nimport style from './Login.module.css';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { Input } from '../common/FormControls';\r\nimport { requiredField, minLength } from '../../utils/validators/validators';\r\n\r\nconst minLength6 = minLength(6);\r\nconst minLength10 = minLength(10);\r\n\r\nconst Login = ({handleSubmit, error}) => {\r\n    return (\r\n        <div className={style.loginPage}>\r\n            <h2>Login</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Field \r\n                        name=\"email\" \r\n                        placeholder=\"Login\" \r\n                        component={Input}\r\n                        validate={[requiredField, minLength10]} \r\n                        label=\"Email\"\r\n                        type=\"email\" />\r\n                </div>\r\n                <div>\r\n                    <Field \r\n                        name=\"password\" \r\n                        placeholder=\"Password\" \r\n                        component={Input}\r\n                        validate={[requiredField, minLength6]} \r\n                        label=\"Password\"\r\n                        type=\"text\" />\r\n                </div>\r\n                <div>\r\n                    <Field \r\n                        name=\"remember\" \r\n                        id=\"rememberMe\" \r\n                        label=\"Remember me\"\r\n                        component={Input}\r\n                        type=\"checkbox\" /> \r\n                </div>\r\n                {error ? <div className={style.commonError}>{error}</div> : <></>}\r\n                <div>\r\n                    <button>Login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nlet LoginForm = reduxForm({\r\n    form: 'login',\r\n})(Login);\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LoginForm from './Login';\r\nimport { login } from '../../redux/authReducer';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass LoginContainer extends React.Component {\r\n    onSubmit = (data) => {\r\n        this.props.login(data)\r\n    }\r\n    render() {\r\n        {\r\n            if(this.props.isAuth){\r\n                return <Redirect to=\"/profile\" />\r\n            }\r\n            else{\r\n                return (\r\n                    <LoginForm onSubmit={this.onSubmit} />\r\n                )\r\n            }\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    login\r\n})(LoginContainer);","import { isAuthFetch } from \"./authReducer\";\r\n\r\nconst inintialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = inintialState, action) => {\r\n    switch(action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// types\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\";\r\n\r\n// actionCreators\r\nexport const setInitialized = () => {\r\n    return{\r\n        type: SET_INITIALIZED\r\n    }\r\n}\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let isAuthResult = dispatch(isAuthFetch())\r\n\r\n    // after 1 promise\r\n    // isAuthResult.then((data) => {\r\n    //     dispatch(setInitialized());\r\n    // })\r\n    \r\n    // after more(array of promises)\r\n    let promisesArray = [isAuthResult];\r\n    Promise.all(promisesArray)\r\n        .then((data) => {\r\n            dispatch(setInitialized());\r\n        })\r\n}\r\n\r\n\r\n\r\nexport default appReducer;","const initialState = {\r\n    menu: [\r\n        {\r\n            id: 1,\r\n            name: 'Profile',\r\n            link: 'profile'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Dialogs',\r\n            link: 'dialogs'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Music',\r\n            link: 'music'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'News',\r\n            link: 'news'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Users',\r\n            link: 'users'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Settings',\r\n            link: 'settings'\r\n        }\r\n    ],\r\n}\r\n\r\nconst navBarReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default navBarReducer;","import profileReducer from \"./profileReducer\";\r\nimport chatReducer from \"./chatReducer\";\r\nimport navBarReducer from \"./navBarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport appReducer from \"./appReducer\";\r\n\r\nconst { createStore, combineReducers, applyMiddleware, compose } = require(\"redux\");\r\n\r\nlet reducers = combineReducers({\r\n    app: appReducer,\r\n    profile: profileReducer,\r\n    chat: chatReducer,\r\n    navBar: navBarReducer,\r\n    users: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n});\r\n\r\n// -- connect redux devtools\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n  ));\r\n// without dev tools\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","\nimport React, { Suspense } from 'react';\nimport { Route, withRouter, BrowserRouter} from \"react-router-dom\";\nimport './common.css';\nimport style from './App.module.css';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport NavBar from './components/NavBar/NavBar';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport LoginContainer from './components/Login/LoginContainer';\n\nimport { initializeApp } from './redux/appReducer';\nimport { connect, Provider } from 'react-redux';\nimport { compose } from 'redux';\nimport Loader from 'react-loader-spinner';\nimport store from './redux/redux-store';\nimport { withSuspense } from './hoc/withSuspense';\nconst UsersContainer = React.lazy(() => import('./components/pages/Users/UsersContainer'));\nconst Dialogs = React.lazy(() => import('./components/Dialogs/Dialogs'));\n// import Dialogs from './components/Dialogs/Dialogs';\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n    render() {\n        if(!this.props.initialized){\n            return <Loader \n                type=\"ThreeDots\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n                timeout={0}\n            />\n        }\n        return(\n            <div className={style.appWrapper}>\n                <HeaderContainer />\n                <main className=\"container\">\n                    <NavBar />\n                    <div className={style.content}>\n                        <Route path=\"/profile/:userId?\" render={ () => \n                            <ProfileContainer />}\n                        />\n                        <Route \n                            path=\"/dialogs\" render={ () => \n                                <Suspense fallback={<Loader \n                                    type=\"ThreeDots\"\n                                    color=\"#00BFFF\"\n                                    height={100}\n                                    width={100}\n                                    timeout={0} />}>\n                                    <Dialogs />\n                                </Suspense> }  />\n                        <Route \n                            path=\"/users\" render={ withSuspense(UsersContainer) }  />\n                        <Route path=\"/login\" render={ () => \n                            <LoginContainer />\n                             }/>\n                    </div>\n                </main>\n            </div>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        initialized: state.app.initialized\n    }\n}\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {\n        initializeApp,\n    })\n)(App);\n\nconst MainApp = (props) => {\n    return (\n        <BrowserRouter>\n            <Provider store={store}>\n                <AppContainer />\n            </Provider>\n        </BrowserRouter>\n    )\n}\n\nexport default MainApp;","import React, { Suspense } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n    return (props) => {\r\n        return <Suspense fallback={<Loader \r\n            type=\"ThreeDots\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={0} />}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    }\r\n}","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MainApp from './App';\n\nReactDOM.render(<MainApp />,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport s from './FormControls.module.css'\r\n\r\n// export const Input = (props) => {\r\n//     return(\r\n//         <div className={s.elemWrap}>\r\n//             <label>{props.label}</label>\r\n//             <input className={s.elemStyle} {...props.input} type={props.type} placeholder={props.placeholder} />\r\n//             {props.meta.touched &&\r\n//             ((props.meta.error && <span className={s.error}>{props.meta.error}</span>) ||\r\n//             (props.meta.warning && <span className={s.warning}>{props.meta.warning}</span>))}\r\n//         </div>\r\n//     )\r\n// }\r\nconst FormControl = ({\r\n    label,\r\n    children,\r\n    meta: {touched, error, warning}\r\n}) => {\r\n    return(\r\n        <div className={s.elemWrap}>\r\n            <label>{label}</label>\r\n            {children}\r\n            {touched &&\r\n            ((error && <span className={s.error}>{error}</span>) ||\r\n            (warning && <span className={s.warning}>{warning}</span>))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    return (<FormControl {...props}><input className={s.elemStyle} {...props.input} type={props.type} placeholder={props.placeholder} /></FormControl>)\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    return (<FormControl {...props}><textarea className={s.elemStyle} {...props.input} type={props.type} placeholder={props.placeholder} /></FormControl>)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"author\":\"ProfileInfo_author__3qY-Z\",\"author__details\":\"ProfileInfo_author__details__tsDl_\",\"status\":\"ProfileInfo_status__2i5Hw\",\"status__input\":\"ProfileInfo_status__input__2K3Pz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"elemWrap\":\"FormControls_elemWrap__eM-VS\",\"elemStyle\":\"FormControls_elemStyle__3VmC5\",\"error\":\"FormControls_error__28f8R\",\"warning\":\"FormControls_warning__1Z_Zm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__QGCCp\",\"friendsLinks\":\"Friends_friendsLinks__2ln0a\",\"friend\":\"Friends_friend__2jQeo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__RHthm\",\"active\":\"Menu_active__4FU-g\",\"activeMessages\":\"Menu_activeMessages__2Vigz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__line\":\"Header_header__line__3O9L-\",\"login\":\"Header_login__1ubwc\",\"userName\":\"Header_userName__8Osrx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__34td_\",\"posts__new\":\"MyPosts_posts__new__3nJ_u\",\"posts__others\":\"MyPosts_posts__others__3zrVs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__1FPVF\",\"content\":\"App_content__tfqI6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2jJ81\",\"post__text\":\"Post_post__text__1akz-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__3b_mh\",\"commonError\":\"Login_commonError___-sVi\"};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        auth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if(!this.props.auth) return <Redirect to={\"/login\"} /> \r\n            return <Component {...this.props} />\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    \r\n    \r\n    let ConnectedAuthRedirectContainer = connect(mapStateToPropsRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectContainer;\r\n}\r\n\r\n\r\n"],"sourceRoot":""}